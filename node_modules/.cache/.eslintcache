[{"C:\\Users\\Upgrade\\react---\\exam7\\src\\index.js":"1","C:\\Users\\Upgrade\\react---\\exam7\\src\\App.js":"2","C:\\Users\\Upgrade\\react---\\exam7\\src\\Register.js":"3","C:\\Users\\Upgrade\\react---\\exam7\\src\\Login.js":"4","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Candidate_list.js":"5","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Company.js":"6","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\SetQuestions.js":"7","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Conduct_exam.js":"8","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\AddJob.js":"9","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Edit.js":"10","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Questions_list.js":"11","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Change.js":"12","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\Appliedjob.js":"13","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\Candidate.js":"14","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\Exam.js":"15","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\CompanyList.js":"16","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\Edit.js":"17","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\resetpwd\\EnterEmail.js":"18","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\resetpwd\\EnterOtp.js":"19","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\resetpwd\\EnterPwd.js":"20","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\Headercandi.js":"21","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Home\\Header.js":"22","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Home\\Footer.js":"23","C:\\Users\\Upgrade\\react---\\exam7\\src\\helpers\\ResetPasswordHelper.js":"24","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\ExamCounter.js":"25"},{"size":302,"mtime":1679818892000,"results":"26","hashOfConfig":"27"},{"size":2766,"mtime":1692883122507,"results":"28","hashOfConfig":"27"},{"size":11334,"mtime":1692961431015,"results":"29","hashOfConfig":"27"},{"size":5492,"mtime":1692945639489,"results":"30","hashOfConfig":"27"},{"size":1992,"mtime":1693461740429,"results":"31","hashOfConfig":"27"},{"size":2051,"mtime":1681538064000,"results":"32","hashOfConfig":"27"},{"size":4177,"mtime":1678169920000,"results":"33","hashOfConfig":"27"},{"size":133,"mtime":1677245562000,"results":"34","hashOfConfig":"27"},{"size":5170,"mtime":1693118218532,"results":"35","hashOfConfig":"27"},{"size":11078,"mtime":1678127508000,"results":"36","hashOfConfig":"27"},{"size":3210,"mtime":1678190624000,"results":"37","hashOfConfig":"27"},{"size":4599,"mtime":1678190310000,"results":"38","hashOfConfig":"27"},{"size":116,"mtime":1677920072000,"results":"39","hashOfConfig":"27"},{"size":1553,"mtime":1677925914000,"results":"40","hashOfConfig":"27"},{"size":5349,"mtime":1693239289863,"results":"41","hashOfConfig":"27"},{"size":3374,"mtime":1677937248000,"results":"42","hashOfConfig":"27"},{"size":10898,"mtime":1677939510000,"results":"43","hashOfConfig":"27"},{"size":1991,"mtime":1677149408000,"results":"44","hashOfConfig":"27"},{"size":1269,"mtime":1677149364000,"results":"45","hashOfConfig":"27"},{"size":3246,"mtime":1677148390000,"results":"46","hashOfConfig":"27"},{"size":1158,"mtime":1692777960731,"results":"47","hashOfConfig":"27"},{"size":1164,"mtime":1692767592609,"results":"48","hashOfConfig":"27"},{"size":244,"mtime":1692767779198,"results":"49","hashOfConfig":"27"},{"size":3441,"mtime":1677042722000,"results":"50","hashOfConfig":"27"},{"size":672,"mtime":1693240793954,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1y5zpgs",{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","suppressedMessages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Upgrade\\react---\\exam7\\src\\index.js",[],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\App.js",["138","139","140","141"],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\Register.js",["142","143","144","145","146"],["147"],"C:\\Users\\Upgrade\\react---\\exam7\\src\\Login.js",["148","149","150","151","152","153","154"],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Candidate_list.js",["155"],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Company.js",["156","157"],[],"import {useNavigate , Outlet} from \"react-router-dom\";\r\nimport back from '../../images/cambg_2.jpg';\r\nimport '../../assets/divs.css';\r\nimport '../../assets/layout.css';\r\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.css'\r\nimport Header from '../Home/Header'\r\nimport'../../Login'\r\nimport Footer from \"../Home/Footer\";\r\n\r\n\r\n\r\nfunction Company()\r\n{\r\n  var navigate = useNavigate();\r\n \r\n //console.log(location.state.user.email+\"on company page\");\r\n// var result =location.state.user;\r\n //var result1=location.state.user;\r\n var se=sessionStorage.getItem(\"Token\");\r\n console.log(sessionStorage.getItem(\"Token\")+\"  This is session object\");\r\n\r\n    return <>\r\n    \r\n       <div style={{backgroundImage:`url(${back})`}} className=\"trsize\">\r\n        \r\n        <Header></Header>\r\n        \r\n        <div className=\"mainDiv\">\r\n\r\n          <div className=\"leftDiv\">\r\n            <br></br>\r\n          <button onClick={()=>{navigate(\"/company/addjob\")}} className=\"btn btn-info\">Add Jobs</button>\r\n          <br></br>\r\n          <br></br>\r\n          <button onClick={()=>{navigate(\"/company/setquestions\")}} className=\"btn btn-info\">Set Questions</button>\r\n          <br></br>\r\n          <br></br>\r\n          <button onClick={()=>{navigate(\"/company/candidate_list\")}} className=\"btn btn-info\">Candidate List</button>\r\n          <br></br>\r\n          <br></br>\r\n          <button onClick={()=>{navigate(\"/company/conduct_exam\")}} className=\"btn btn-info\">Exam Conduct</button>\r\n          <br></br>\r\n          <br></br>\r\n          <button onClick={()=>{navigate(\"/company/edit\")}} className=\"btn btn-info\">View Profile</button>\r\n          <br></br>\r\n          <br></br>\r\n          <button onClick={()=>{navigate(\"/company/questions\")}} className=\"btn btn-info\">Questions</button>\r\n          </div>\r\n        \r\n\r\n        \r\n        <div className=\"rightDiv\">\r\n        <Outlet></Outlet>\r\n        </div>\r\n\r\n        \r\n\r\n      \r\n        \r\n        \r\n        \r\n        \r\n        </div>\r\n       \r\n        </div>\r\n        \r\n         </>\r\n}\r\n\r\nexport default Company;","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\SetQuestions.js",["158","159","160","161"],[],"import React ,{useState} from \"react\";\r\nimport {useLocation ,useNavigate} from \"react-router-dom\";\r\nfunction SetQuestions()\r\n{\r\n    const [que ,setQue]=useState({\r\n        question:\"\",\r\n        option_a:\"\",\r\n        option_b:\"\",\r\n        option_c:\"\",\r\n        option_d:\"\",\r\n        option_e:\"\",\r\n        correct_ans:\"\",\r\n        company_id:{id:\"\"}\r\n    });\r\n    var navigate=useNavigate();\r\n  //  var location = useLocation();\r\n    var resultObj=sessionStorage.getItem(\"id\")\r\n\r\nvar handleChange=(e)=>\r\n{\r\n    var copyOfQue = {...que }\r\n    copyOfQue[e.target.id]=e.target.value;\r\n    setQue(copyOfQue);\r\n}\r\n\r\nvar handleChange_role =(e)=>\r\n{\r\n    var copyOfQue1 = {...que }\r\n    copyOfQue1[e.target.id]=e.target.value;\r\n    setQue(copyOfQue1);\r\n}\r\nvar sendData=()=>{\r\n\r\n    var userObjectInStringFormat = JSON.stringify(que);\r\n\r\n    console.log(userObjectInStringFormat);\r\n    \r\n    var helper = new XMLHttpRequest();\r\n    helper.onreadystatechange=()=>{\r\n      \r\n      if(helper.readyState==4 && helper.status==201)\r\n      {\r\n  \r\n        var result=JSON.parse(helper.responseText);\r\n        console.log(result.affectedRow+\" this is result\");\r\n        console.log(result+\" this is result\");\r\n        if(helper.status==201)\r\n        {\r\n         \r\n         \r\n            clear();\r\n            alert(\"Add Question Successfully...!\")\r\n          navigate(\"/company/setquestions\");\r\n        }\r\n  \r\n      }\r\n  \r\n      \r\n  };\r\n  helper.open(\"POST\",\"http://localhost:8080/company/addQuest\");\r\n  \r\n  helper.setRequestHeader(\"content-type\",\"application/json\")\r\n  \r\n  helper.send(userObjectInStringFormat);\r\n}\r\n\r\nconst clear=()=>{\r\n    debugger;\r\n    que.question=\"\";\r\n    que.option_a=\"\";\r\n    que.option_b=\"\";\r\n    que.option_c=\"\";\r\n    que.option_d=\"\";\r\n    que.option_e=\"\";\r\n    que.correct_ans=\"\";\r\n    \r\n  }\r\n    return(<>\r\n    <center className=\"table table-info table-striped-columns\">\r\n        <h2 className=\"bg-info p-2 text-dark bg-opacity-25\">Set Question Paper</h2>\r\n        <table>\r\n             <tr>\r\n                <td></td>\r\n                <td><input value={que.company_id.id=resultObj} type=\"hidden\" id=\"company_id\" /></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Question :</td>\r\n                <td><input value={que.question} type=\"text\" onChange={handleChange} id=\"question\" className=\"inputstyle\"/></td>\r\n            </tr>\r\n            <tr>\r\n                <td>Option a:</td>\r\n                <td><input value={que.option_a} type=\"text\" onChange={handleChange} id=\"option_a\"/></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>Option b:</td>\r\n                <td><input value={que.option_b} type=\"text\" onChange={handleChange} id=\"option_b\"/></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>Option c:</td>\r\n                <td><input value={que.option_c} type=\"text\" onChange={handleChange} id=\"option_c\"/></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>Option d:</td>\r\n                <td><input value={que.option_d} type=\"text\" onChange={handleChange} id=\"option_d\"/></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>Option e:</td>\r\n                <td><input value={que.option_e} type=\"text\" onChange={handleChange} id=\"option_e\"/></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>Corrct Answer :</td>\r\n                <td><select value={que.correct_ans} id=\"correct_ans\" onChange={handleChange_role}>\r\n                 <option value=\"\">Select Answer</option>\r\n                  <option value=\"a\">Option A</option>\r\n                  <option value=\"b\">Option B</option>\r\n                  <option value=\"c\">Option C</option>\r\n                  <option value=\"d\">Option D</option>\r\n                  <option value=\"e\">Option E</option>\r\n                </select></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                \r\n                <td colSpan={2}></td>\r\n            </tr>\r\n            \r\n\r\n        </table>\r\n\r\n    </center>\r\n    <center><button\r\n                    onClick={sendData}  className=\"btn btn-info\"\r\n                  >\r\n                   Submit\r\n                  </button></center>\r\n    \r\n    \r\n    </>);\r\n}\r\nexport default SetQuestions;","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Conduct_exam.js",[],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\AddJob.js",["162","163","164","165","166"],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Edit.js",["167","168","169","170","171","172","173","174"],[],"import { useState ,useEffect, } from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\"\r\n\r\nfunction Edit()\r\n{\r\n\r\n    var navigate= useNavigate();\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\r\n    const [error, setError] = useState({});\r\n\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        address: \"\",\r\n        city:\"\",\r\n        state:\"\",\r\n        pincode:\"\",\r\n        email: \"\",\r\n        mobile_no: \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n        dob:\"\",\r\n        gender:\"\",\r\n        contact_person:\"\",\r\n        company_website:\"\",\r\n        role_in_company:\"\",\r\n        qualification_details:\"\",\r\n        user_type_id:{id:\"\"}\r\n      });\r\n\r\n      useEffect(()=>{\r\n\r\n        var helper = new XMLHttpRequest();\r\n    \r\n        var user_id= sessionStorage.getItem(\"id\");\r\n        console.log(user_id);\r\n        const url=\"http://localhost:8080/users/\"+user_id\r\n\r\n\r\n       \r\n    \r\n    \r\n        helper.onreadystatechange=()=>{\r\n    \r\n          //  debugger;\r\n            if(helper.readyState == 4 )\r\n            {\r\n                var result=JSON.parse(helper.responseText);\r\n                console.log(result);\r\n                setUser(result)\r\n                \r\n            }\r\n        }\r\n    \r\n        console.log(url);\r\n        helper.open(\"GET\",url)\r\n        helper.setRequestHeader(\"Content-Type\", \"application/json\")\r\n        helper.send()\r\n\r\n        \r\n\r\n      },[]);\r\n\r\n\r\n\r\n      // var user_id= sessionStorage.getItem(\"id\");\r\n   \r\n\r\n      // const url1=\"http://localhost:8080/users/\"+user_id\r\n\r\n   \r\n    // var helper = new XMLHttpRequest();\r\n    \r\n    // var user_id= sessionStorage.getItem(\"id\");\r\n    // console.log(user_id);\r\n    // const url=\"http://localhost:8080/users/\"+user_id\r\n\r\n\r\n    // helper.onreadystatechange=()=>{\r\n\r\n    //   //  debugger;\r\n    //     if(helper.readyState == 4 )\r\n    //     {\r\n    //         var result=JSON.parse(helper.responseText);\r\n    //         console.log(result);\r\n    //         setUser(result)\r\n            \r\n    //     }\r\n    // }\r\n\r\n    // console.log(url);\r\n    // helper.open(\"GET\",url)\r\n    // helper.setRequestHeader(\"Content-Type\", \"application/json\")\r\n    // helper.send()\r\n\r\n\r\n   \r\n\r\n\r\n\r\n        const sendData =()=>{\r\n\r\n            var userid=sessionStorage.getItem(\"id\");\r\n\r\n\r\n            var updateurl=\"http://localhost:8080/users/\"+userid\r\n\r\n                console.log(updateurl);\r\n\r\n            var userObjectInStringFormat = JSON.stringify(user);\r\n          \r\n            console.log(userObjectInStringFormat);\r\n            \r\n            var helper = new XMLHttpRequest();\r\n            helper.onreadystatechange=()=>{\r\n              \r\n              if(helper.readyState==4 )\r\n              {\r\n           //     console.log(user);\r\n              //  console.log(user);\r\n                var result=JSON.parse(helper.responseText);\r\n                 if(result!=null)\r\n                {\r\n          \r\n                  alert(\"Update Successfully...!!!\")\r\n                 navigate(\"/company\")\r\n                }\r\n          \r\n                \r\n               \r\n          \r\n              }\r\n          \r\n              \r\n          };\r\n          helper.open(\"PUT\",updateurl);\r\n          \r\n          helper.setRequestHeader(\"content-type\",\"application/json\")\r\n          \r\n          helper.send(userObjectInStringFormat);\r\n          };\r\n\r\n\r\n\r\n          const handleChange = (e) => {\r\n            var copyOfUser = { ...user };\r\n            copyOfUser[e.target.id] = e.target.value;\r\n            //set the form values\r\n            setUser(copyOfUser);\r\n          };\r\n\r\n\r\n\r\n\r\n          const register = (values) => {\r\n            // debugger;\r\n              const errors={};\r\n             //regular expression for validating email\r\n             const email_regex = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/;\r\n             //regular expression for validating phone number\r\n             const mobile_no_regex =\r\n               /(\\+)?(91)?( )?[789]\\d{9}/g;\r\n             //regular expression for validating name\r\n             const name_regex = /^[a-zA-Z ]{2,40}$/;\r\n             //regular expression for validating password\r\n         \r\n             const address_regex = /^[a-zA-Z ]{2,40}$/;\r\n         \r\n             const pincode_regex =\r\n             /^[1-9][0-9]{5}$/;\r\n         \r\n             const user_type_id_regex=\r\n             /(\\+)?(91)?( )?[789]\\d{9}/g;\r\n         \r\n             const password_regex =\r\n               /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\\\$%\\\\^&\\\\*])(?=.{8,})/;\r\n         \r\n         \r\n         \r\n             //checking for each of the values\r\n             if (!values.name) {\r\n                 errors.name = \"First Name is required!\";\r\n             } else if (!name_regex.test(values.name)) {\r\n                 errors.name = \"First Name only contains characters\";\r\n             }\r\n              else if (!values.address) {\r\n               errors.address = \"address is required!\";\r\n             }\r\n              else if (!address_regex.test(values.address)) {\r\n               errors.address = \"address only contains characters\";\r\n             }\r\n             else if (!pincode_regex.test(values.pincode)) {\r\n               errors.pincode = \"pincode only contains number\";\r\n             }\r\n              else if (!values.email) {\r\n               errors.email = \"Email is required!\";\r\n             }\r\n              else if (!email_regex.test(values.email)) {\r\n               errors.email = \"This is not a valid Email format!\";\r\n             }\r\n              else if (!values.mobile_no) {\r\n               errors.mobile_no = \"Mobile No is required!\";\r\n             }\r\n              else if (!mobile_no_regex.test(values.mobile_no)) {\r\n               errors.mobile_no = \"Mobile number must contains 10 digits only!\";\r\n             }\r\n              else if (!values.password) {\r\n               errors.password = \"Password is required!\";\r\n             }\r\n              else if (!password_regex.test(values.password)) {\r\n               errors.password =\r\n                 \"Password must contain a digit, uppercase letter, lowecase letter, special charater.\";\r\n             }\r\n              else if (values.confirmpassword !== values.password) {\r\n               errors.confirmpassword = \"Confirm Password must match with password!\";\r\n             }\r\n             else if (!values.email) {\r\n               errors.email = \"Email is required!\";\r\n             }\r\n         \r\n         \r\n         \r\n              else if (!values.role) {\r\n               errors.role = \"Select Role!\";\r\n             }\r\n              else {\r\n               var dataToBeSent = {\r\n                 name: user.name,\r\n                 address: user.address,\r\n                 city:user.city,\r\n                 state:user.state,\r\n                 pincode:user.pincode,\r\n                 email: user.email,\r\n                 mobile_no: user.mobile_no,\r\n                 password: user.password,\r\n                 dob:user.dob,\r\n                 gender:user.gender,\r\n                 contact_person:user.contact_person,\r\n                 contact_website:user.contact_website,\r\n                 role_in_company: user.role_in_company,\r\n                 qualification_details:user.qualification_details,\r\n                 user_token:user.user_tokan,\r\n                 user_type_id:{id:user.user_type_id}\r\n               };\r\n         \r\n             setError(errors);\r\n               }\r\n         \r\n               \r\n               \r\n         \r\n             \r\n         };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(<>\r\n    <h1 className=\"updateDiv\">Edit Your Profile</h1>\r\n    <div>\r\n    <center >\r\n        <div className=\"tablecenter\">\r\n\r\n        <br></br>\r\n        <br></br>\r\n        \r\n        <table className=\"table table-striped\">\r\n          <tbody>\r\n            <tr>\r\n              <td>Name :</td>\r\n              <td>\r\n                <input\r\n                  value={user.name}\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n              <td>{error.name}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>address :</td>\r\n              <td>\r\n                <input\r\n                  value={user.address}\r\n                  type=\"text\"\r\n                  id=\"address\"\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n\r\n              <td>{error.address}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>City :</td>\r\n                <td>\r\n                  <input \r\n                        value={user.city}\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        onChange={handleChange}/>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>State :</td>\r\n                <td>\r\n                  <input \r\n                        value={user.state}\r\n                        type=\"text\"\r\n                        id=\"state\"\r\n                        onChange={handleChange}/>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>Pincode :</td>\r\n                <td>\r\n                  <input \r\n                        value={user.pincode}\r\n                        type=\"text\"\r\n                        id=\"pincode\"\r\n                        onChange={handleChange}/>\r\n                </td>\r\n                <td>{error.pincode}</td>\r\n            </tr>\r\n  \r\n            <tr>\r\n              <td>Mobile no :</td>\r\n              <td>\r\n                <input\r\n                  value={user.mobile_no}\r\n                  type=\"text\"\r\n                  id=\"mobile_no\"\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n\r\n              <td>{error.mobile_no}</td>\r\n            </tr>\r\n            \r\n           \r\n           \r\n\r\n            {/* <tr>\r\n                <td>Date of birth:</td>\r\n                <td>\r\n                  <input \r\n                        value={user.dob}\r\n                        type=\"date\"\r\n                        id=\"dob\"\r\n                        onChange={handleChange}/>\r\n                </td>\r\n                <td></td>\r\n            </tr> */}\r\n\r\n\r\n           \r\n\r\n           \r\n            <tr>\r\n                <td>Highest Qualification :</td>\r\n                <td>\r\n                  <input \r\n                        value={user.qualification_details}\r\n                        type=\"text\"\r\n                        id=\"qualification_details\"\r\n                        onChange={handleChange}/>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <td style={{ colspan: 2 }}>         \r\n                  <br></br>\r\n                  <center><button className=\"btn btn-outline-success\" onClick={sendData}>\r\n                    Update\r\n                  </button></center>\r\n                 \r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n      </center>\r\n    </div>\r\n    \r\n    \r\n    </>);\r\n}\r\nexport default Edit;","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Questions_list.js",["175","176","177","178","179","180"],[],"import { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\nfunction Questions()\r\n{\r\n\r\n    // const [que ,setQue]=useState([{\r\n    //     id: \"\",\r\n    //     question: \"\",\r\n    //     option_a: \"\",\r\n    //     option_b: \"\",\r\n    //     option_c: \"\",\r\n    //     option_d: \"\",\r\n    //     correct_ans: \"\",\r\n    //     company_id: {\r\n    //         id: \"\",\r\n    //         name: \"\",\r\n    //         address: \"\",\r\n    //         city: \"\",\r\n    //         state: \"\",\r\n    //         pincode: \"\",\r\n    //         email: \"\",\r\n    //         mobile_no: \"\",\r\n    //         password: \"\",\r\n    //         dob: \"\",\r\n    //         gender: \"\",\r\n    //         contact_person: \"\",\r\n    //         company_website: \"\",\r\n    //         role_in_company: \"\",\r\n    //         qualification_details: \"\",\r\n    //         user_type_id: {\r\n    //             id: \"\",\r\n    //             user_type: \"\"\r\n    //         }\r\n    //     }\r\n       \r\n    // }]);\r\n    var navigate= useNavigate();\r\n    const [ques ,setQues]=useState([{\r\n        id:\"\",\r\n        question:\"\",\r\n        option_a:\"\",\r\n        option_b:\"\",\r\n        option_c:\"\",\r\n        option_d:\"\",\r\n        option_e:\"\",\r\n        correct_ans:\"\",\r\n        selected_ans:\"\",\r\n        company_id:{id:\"\"}\r\n    }]);\r\n    const [updatques ,setupdatques]=useState({\r\n        id:\"\",\r\n        question:\"\",\r\n        option_a:\"\",\r\n        option_b:\"\",\r\n        option_c:\"\",\r\n        option_d:\"\",\r\n        option_e:\"\",\r\n        correct_ans:\"\",\r\n        selected_ans:\"\",\r\n        company_id:{id:\"\"}\r\n    });\r\n    var result=[];\r\n\r\n    useEffect(()=>{\r\n        var helper = new XMLHttpRequest();\r\n          helper.onreadystatechange = ()=>{\r\n           \r\n              if(helper.readyState == 4 && helper.status == 200)\r\n              {\r\n                \r\n                   result = JSON.parse(helper.responseText);\r\n                   console.log(result);\r\n                  \r\n                  setQues(result);\r\n                  console.log(ques);\r\n                \r\n                 }\r\n          };\r\n        \r\n          helper.open(\"GET\",\"http://localhost:8080/student/getQues/7\");\r\n          helper.setRequestHeader(\"Content-Type\", \"application/json\")\r\n    \r\n         helper.send()\r\n          \r\n\r\n    },[])\r\n\r\n    var handleChange=((e,id)=>{\r\n       sessionStorage.setItem(\"change\",id)\r\n       navigate(\"/company/change\")\r\n\r\n       \r\n    })\r\n    \r\n   \r\n\r\n\r\n\r\n\r\n\r\n    return(<>\r\n    <h1>Applied Job Page</h1>\r\n\r\n    {\r\n        ques.map((q)=>{\r\n            return <>\r\n            \r\n            <div className=\"navcolor\">\r\n                <table>\r\n                    <tr>\r\n                        <td>Question :  </td>\r\n                        <td>{q.question}</td>   \r\n                        <td><center><button\r\n                    onClick={(e)=>{handleChange(e,q.id)}}  className=\"btn btn-info\"\r\n                  >\r\n                   Update\r\n                  </button></center></td>                   \r\n                    </tr>\r\n                    \r\n                </table>\r\n                \r\n            </div>\r\n            <hr></hr>\r\n            </>\r\n        })\r\n       \r\n    }\r\n    \r\n\r\n    \r\n    </>);\r\n}\r\nexport default Questions;","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Company\\Change.js",["181","182","183","184","185","186"],[],"import { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction Change()\r\n{\r\n\r\n    var navigate=useNavigate();\r\n\r\n    const [q ,setQues1]=useState({\r\n        id:0,\r\n        question:\"abcd\",\r\n        option_a:\"a\",\r\n        option_b:\"b\",\r\n        option_c:\"\",\r\n        option_d:\"d\",     \r\n        correct_ans:\"b\",\r\n        selected_ans:\"a\",\r\n        company_id:{id:\"\"}\r\n    });\r\n\r\n    var result;\r\n    useEffect(()=>{\r\n        var get_id= sessionStorage.getItem(\"change\")\r\n\r\n        var url = \"http://localhost:8080/company/quest/\"+get_id\r\n\r\n        var helper = new XMLHttpRequest();\r\n        helper.onreadystatechange = ()=>{\r\n         \r\n            if(helper.readyState == 4 && helper.status == 200)\r\n            {\r\n              \r\n                 result = JSON.parse(helper.responseText);\r\n                 console.log(result);\r\n                \r\n                 setQues1(result);\r\n                console.log(q);\r\n              \r\n               }\r\n        };\r\n      \r\n        helper.open(\"GET\",url);\r\n        helper.setRequestHeader(\"Content-Type\", \"application/json\")\r\n  \r\n       helper.send()\r\n    },[])\r\n\r\n    var handleChange=(e)=>\r\n{\r\n    var copyOfQue = {...q }\r\n    copyOfQue[e.target.id]=e.target.value;\r\n    setQues1(copyOfQue);\r\n}\r\n\r\nvar handleChange_role =(e)=>\r\n{\r\n    var copyOfQue1 = {...q }\r\n    copyOfQue1[e.target.id]=e.target.value;\r\n    setQues1(copyOfQue1);\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    var updateData=()=>{\r\n        var url1=\"http://localhost:8080/company/updateQuest/\"+q.id\r\n\r\n        var userObjectInStringFormat = JSON.stringify(q);\r\n\r\n        console.log(userObjectInStringFormat);\r\n        \r\n        var helper = new XMLHttpRequest();\r\n        helper.onreadystatechange=()=>{\r\n          \r\n          if(helper.readyState==4 && helper.status==200)\r\n          {\r\n      \r\n            var result=JSON.parse(helper.responseText);\r\n            console.log(result.affectedRow+\" this is result\");\r\n            console.log(result+\" this is result\");\r\n            if(helper.status==200)\r\n            {              \r\n                alert(\"Update Question Successfully...!\")\r\n              navigate(\"/company/questions\");\r\n            }\r\n      \r\n          }\r\n      \r\n          \r\n      };\r\n      helper.open(\"PUT\",url1);\r\n      \r\n      helper.setRequestHeader(\"content-type\",\"application/json\")\r\n      \r\n      helper.send(userObjectInStringFormat);\r\n    }\r\n\r\n\r\n    return(<>\r\n    <h1>Change Job Page</h1>\r\n    <div key={q.id}>\r\n                <table>\r\n                    <tr>\r\n                        <td>Question :</td>\r\n                        <td><input value={q.question} className=\"inputstyle\"  type=\"text\" onChange={handleChange}  id=\"question\"/></td>                      \r\n                    </tr>\r\n                    <tr>\r\n                        <td>Option A :</td>\r\n                        <td><input value={q.option_a} className=\"inputstyle\"  type=\"text\" onChange={handleChange} id=\"option_a\" /></td>                      \r\n                    </tr>\r\n                    <tr>\r\n                        <td>Option B :</td>\r\n                        <td><input value={q.option_b} className=\"inputstyle\"  type=\"text\" onChange={handleChange} id=\"option_b\" /></td>                      \r\n                    </tr>\r\n                    <tr>\r\n                        <td>Option C :</td>\r\n                        <td><input value={q.option_c} className=\"inputstyle\" onChange={handleChange} id=\"option_c\" /></td>                      \r\n                    </tr>\r\n                    <tr>\r\n                        <td>Option D :</td>\r\n                        <td><input value={q.option_d} className=\"inputstyle\" onChange={handleChange} id=\"option_d\" /></td>                      \r\n                    </tr>\r\n                    <tr>\r\n                <td>Corrct Answer :</td>\r\n                <td><select value={q.correct_ans} id=\"correct_ans\" onChange={handleChange_role}>\r\n                 <option value=\"\">Select Answer</option>\r\n                  <option value=\"a\">Option A</option>\r\n                  <option value=\"b\">Option B</option>\r\n                  <option value=\"c\">Option C</option>\r\n                  <option value=\"d\">Option D</option>\r\n                  <option value=\"e\">Option E</option>\r\n                </select></td>\r\n            </tr>\r\n                </table>\r\n                <center><button\r\n                    onClick={updateData}  className=\"btn btn-info\"\r\n                  >\r\n                   Update\r\n                  </button></center>\r\n            </div>\r\n    </>);\r\n}\r\nexport default Change;","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\Appliedjob.js",[],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\Candidate.js",[],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\Exam.js",["187","188","189","190","191","192","193","194","195","196","197","198"],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\CompanyList.js",["199","200","201","202","203"],[],"import { useState} from \"react\";\r\n\r\nfunction CompanyList()\r\n{\r\n\r\n\r\n    const [apply, setApply] = useState({\r\n      isApplied:\"\",\r\n      application_date:\"\",\r\n      user_id:{id:\"\"},\r\n      post_job_id:{id:\"\"}\r\n  });\r\n\r\n    const [list, setList] = useState([{\r\n      last_date: \"\",\r\n      vacancy: \"\",\r\n      skills:\"\",\r\n      required_qualification:\"\",\r\n      max_age:\"\",\r\n      job_location: \"\",\r\n      salary: \"\",\r\n      working_hours: \"\",\r\n      description: \"\",      \r\n      user_id:{id:\"\"}\r\n    }]);\r\n\r\n    var onhandle=(e,id)=>{\r\n\r\n     // var date = moment().format();\r\n      apply.isApplied=true;\r\n     // apply.application_date=date;\r\n      var a = sessionStorage.getItem(\"id\")\r\n\r\n      apply.user_id.id=a;\r\n\r\n      apply.post_job_id.id=id;\r\n\r\n      \r\n      console.log(apply);\r\n\r\n      console.log(id);\r\n\r\n      var userObjectInStringFormat = JSON.stringify(apply);\r\n      var helper1 = new XMLHttpRequest();\r\n      helper1.onreadystatechange = ()=>{\r\n       \r\n          if(helper1.readyState == 4 && helper1.status == 200)\r\n          {\r\n           \r\n              var result1 = helper1.responseText; // get the token from resp body\r\n              console.log(result1+\"SuccessFull\");\r\n            \r\n             }\r\n      };\r\n    \r\n      helper1.open(\"POST\",\"http://localhost:8080/student/applyjob\");\r\n      helper1.setRequestHeader(\"Content-Type\", \"application/json\")\r\n      helper1.send(userObjectInStringFormat)\r\n     \r\n      \r\n     e.target.className=\"btn btn-outline-success disabled\";\r\n     e.target.enabled =false;\r\n      alert(\"Apply Successfull\")\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n      var onhandler=()=>{\r\n      var helper = new XMLHttpRequest();\r\n        helper.onreadystatechange = ()=>{\r\n         // console.log(user);\r\n            if(helper.readyState == 4 && helper.status == 200)\r\n            {\r\n              //  debugger;\r\n            //  console.log(user);\r\n                var result = JSON.parse(helper.responseText); // get the token from resp body\r\n                //console.log(result)\r\n                setList(result);\r\n\r\n                console.log(list);\r\n              // if(result!=null){\r\n               \r\n               // console.log(list);\r\n               }\r\n        };\r\n      \r\n        helper.open(\"GET\",\"http://localhost:8080/student/showcompany\");\r\n        helper.setRequestHeader(\"Content-Type\", \"application/json\")\r\n       // debugger;\r\n    \r\n        helper.send()\r\n        //console.log(result)\r\n        \r\n      }\r\n    \r\n    return(<>\r\n    <h1>This is CompanyList Page</h1>\r\n    <button onClick={onhandler}>Click</button>\r\n\r\n      <div id=\"container\">\r\n        {\r\n         list.map((lists)=>{\r\n            return<>\r\n            <div className=\"p-3 mb-2 bg-dark text-info\">\r\n              \r\n            <h6>Vacancy : {lists.vacancy}</h6>\r\n            <h6>Skills : {lists.skills}</h6>\r\n            <h6>Qualification :{lists.required_qualification}</h6>\r\n            <h6>Salary : {lists.salary}</h6>\r\n            <h6> working Hours : {lists.working_hours}</h6>\r\n            <h6> Max Age : {lists.max_age}</h6>\r\n            <h6> Description : {lists.description}</h6>\r\n            <hr></hr>\r\n            <br></br>\r\n            <button className=\"btn btn-outline-success\" onClick={(event)=>{onhandle(event,lists.id)}} >Apply</button>\r\n        </div>\r\n            </>\r\n          })\r\n        }\r\n      </div>\r\n  </>\r\n)}\r\n\r\nexport default CompanyList;","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\Edit.js",["204","205","206","207","208","209","210","211"],[],"import { useState ,useEffect, } from \"react\";\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport axios from \"axios\"\r\n\r\nfunction Edit()\r\n{\r\n\r\n    var navigate= useNavigate();\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n\r\n\r\n    const [error, setError] = useState({});\r\n\r\n    const [user, setUser] = useState({\r\n        name: \"\",\r\n        address: \"\",\r\n        city:\"\",\r\n        state:\"\",\r\n        pincode:\"\",\r\n        email: \"\",\r\n        mobile_no: \"\",\r\n        password: \"\",\r\n        confirmpassword: \"\",\r\n        dob:\"\",\r\n        gender:\"\",\r\n        contact_person:\"\",\r\n        company_website:\"\",\r\n        role_in_company:\"\",\r\n        qualification_details:\"\",\r\n        user_type_id:{id:\"\"}\r\n      });\r\n\r\n      useEffect(()=>{\r\n\r\n        var helper = new XMLHttpRequest();\r\n    \r\n        var user_id= sessionStorage.getItem(\"id\");\r\n        console.log(user_id);\r\n        const url=\"http://localhost:8080/users/\"+user_id\r\n\r\n\r\n       \r\n    \r\n    \r\n        helper.onreadystatechange=()=>{\r\n    \r\n          //  debugger;\r\n            if(helper.readyState == 4 )\r\n            {\r\n                var result=JSON.parse(helper.responseText);\r\n                console.log(result);\r\n                setUser(result)\r\n                \r\n            }\r\n        }\r\n    \r\n        console.log(url);\r\n        helper.open(\"GET\",url)\r\n        helper.setRequestHeader(\"Content-Type\", \"application/json\")\r\n        helper.send()\r\n\r\n        \r\n\r\n      },[]);\r\n\r\n\r\n\r\n      var user_id= sessionStorage.getItem(\"id\");\r\n   \r\n\r\n      const url1=\"http://localhost:8080/users/\"+user_id\r\n\r\n   \r\n    // var helper = new XMLHttpRequest();\r\n    \r\n    // var user_id= sessionStorage.getItem(\"id\");\r\n    // console.log(user_id);\r\n    // const url=\"http://localhost:8080/users/\"+user_id\r\n\r\n\r\n    // helper.onreadystatechange=()=>{\r\n\r\n    //   //  debugger;\r\n    //     if(helper.readyState == 4 )\r\n    //     {\r\n    //         var result=JSON.parse(helper.responseText);\r\n    //         console.log(result);\r\n    //         setUser(result)\r\n            \r\n    //     }\r\n    // }\r\n\r\n    // console.log(url);\r\n    // helper.open(\"GET\",url)\r\n    // helper.setRequestHeader(\"Content-Type\", \"application/json\")\r\n    // helper.send()\r\n\r\n\r\n   \r\n\r\n\r\n\r\n        const sendData =()=>{\r\n\r\n            var userid=sessionStorage.getItem(\"id\");\r\n\r\n\r\n            var updateurl=\"http://localhost:8080/users/\"+userid\r\n\r\n                console.log(updateurl);\r\n\r\n            var userObjectInStringFormat = JSON.stringify(user);\r\n          \r\n            console.log(userObjectInStringFormat);\r\n            \r\n            var helper = new XMLHttpRequest();\r\n            helper.onreadystatechange=()=>{\r\n              \r\n              if(helper.readyState==4 )\r\n              {\r\n           //     console.log(user);\r\n              //  console.log(user);\r\n                var result=JSON.parse(helper.responseText);\r\n                 if(result!=null)\r\n                {\r\n          \r\n                  alert(\"Update Successfully...!!!\")\r\n                 navigate(\"/candidate\")\r\n                }\r\n          \r\n                \r\n               \r\n          \r\n              }\r\n          \r\n              \r\n          };\r\n          helper.open(\"PUT\",updateurl);\r\n          \r\n          helper.setRequestHeader(\"content-type\",\"application/json\")\r\n          \r\n          helper.send(userObjectInStringFormat);\r\n          };\r\n\r\n\r\n\r\n          const handleChange = (e) => {\r\n            var copyOfUser = { ...user };\r\n            copyOfUser[e.target.id] = e.target.value;\r\n            //set the form values\r\n            setUser(copyOfUser);\r\n          };\r\n\r\n\r\n\r\n\r\n          const register = (values) => {\r\n            // debugger;\r\n              const errors={};\r\n             //regular expression for validating email\r\n             const email_regex = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/;\r\n             //regular expression for validating phone number\r\n             const mobile_no_regex =\r\n               /(\\+)?(91)?( )?[789]\\d{9}/g;\r\n             //regular expression for validating name\r\n             const name_regex = /^[a-zA-Z ]{2,40}$/;\r\n             //regular expression for validating password\r\n         \r\n             const address_regex = /^[a-zA-Z ]{2,40}$/;\r\n         \r\n             const pincode_regex =\r\n             /^[1-9][0-9]{5}$/;\r\n         \r\n             const user_type_id_regex=\r\n             /(\\+)?(91)?( )?[789]\\d{9}/g;\r\n         \r\n             const password_regex =\r\n               /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\\\$%\\\\^&\\\\*])(?=.{8,})/;\r\n         \r\n         \r\n         \r\n             //checking for each of the values\r\n             if (!values.name) {\r\n                 errors.name = \"First Name is required!\";\r\n             } else if (!name_regex.test(values.name)) {\r\n                 errors.name = \"First Name only contains characters\";\r\n             }\r\n              else if (!values.address) {\r\n               errors.address = \"address is required!\";\r\n             }\r\n              else if (!address_regex.test(values.address)) {\r\n               errors.address = \"address only contains characters\";\r\n             }\r\n             else if (!pincode_regex.test(values.pincode)) {\r\n               errors.pincode = \"pincode only contains number\";\r\n             }\r\n              else if (!values.email) {\r\n               errors.email = \"Email is required!\";\r\n             }\r\n              else if (!email_regex.test(values.email)) {\r\n               errors.email = \"This is not a valid Email format!\";\r\n             }\r\n              else if (!values.mobile_no) {\r\n               errors.mobile_no = \"Mobile No is required!\";\r\n             }\r\n              else if (!mobile_no_regex.test(values.mobile_no)) {\r\n               errors.mobile_no = \"Mobile number must contains 10 digits only!\";\r\n             }\r\n              else if (!values.password) {\r\n               errors.password = \"Password is required!\";\r\n             }\r\n              else if (!password_regex.test(values.password)) {\r\n               errors.password =\r\n                 \"Password must contain a digit, uppercase letter, lowecase letter, special charater.\";\r\n             }\r\n              else if (values.confirmpassword !== values.password) {\r\n               errors.confirmpassword = \"Confirm Password must match with password!\";\r\n             }\r\n             else if (!values.email) {\r\n               errors.email = \"Email is required!\";\r\n             }\r\n         \r\n         \r\n         \r\n              else if (!values.role) {\r\n               errors.role = \"Select Role!\";\r\n             }\r\n              else {\r\n               var dataToBeSent = {\r\n                 name: user.name,\r\n                 address: user.address,\r\n                 city:user.city,\r\n                 state:user.state,\r\n                 pincode:user.pincode,\r\n                 email: user.email,\r\n                 mobile_no: user.mobile_no,\r\n                 password: user.password,\r\n                 dob:user.dob,\r\n                 gender:user.gender,\r\n                 contact_person:user.contact_person,\r\n                 contact_website:user.contact_website,\r\n                 role_in_company: user.role_in_company,\r\n                 qualification_details:user.qualification_details,\r\n                 user_token:user.user_tokan,\r\n                 user_type_id:{id:user.user_type_id}\r\n               };\r\n         \r\n             setError(errors);\r\n               }\r\n         \r\n               \r\n               \r\n         \r\n             \r\n         };\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return(<>\r\n    \r\n    <center>\r\n        <div>{message}</div>\r\n\r\n        <br></br>\r\n        <br></br>\r\n        <h1>Edit Your Profile</h1>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td>Name:</td>\r\n              <td>\r\n                <input\r\n                  value={user.name}\r\n                  type=\"text\"\r\n                  id=\"name\"\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n              <td>{error.name}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>address:</td>\r\n              <td>\r\n                <input\r\n                  value={user.address}\r\n                  type=\"text\"\r\n                  id=\"address\"\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n\r\n              <td>{error.address}</td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>City:</td>\r\n                <td>\r\n                  <input \r\n                        value={user.city}\r\n                        type=\"text\"\r\n                        id=\"city\"\r\n                        onChange={handleChange}/>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>State:</td>\r\n                <td>\r\n                  <input \r\n                        value={user.state}\r\n                        type=\"text\"\r\n                        id=\"state\"\r\n                        onChange={handleChange}/>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n\r\n            <tr>\r\n                <td>Pincode:</td>\r\n                <td>\r\n                  <input \r\n                        value={user.pincode}\r\n                        type=\"text\"\r\n                        id=\"pincode\"\r\n                        onChange={handleChange}/>\r\n                </td>\r\n                <td>{error.pincode}</td>\r\n            </tr>\r\n  \r\n            <tr>\r\n              <td>Mobile no:</td>\r\n              <td>\r\n                <input\r\n                  value={user.mobile_no}\r\n                  type=\"text\"\r\n                  id=\"mobile_no\"\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n\r\n              <td>{error.mobile_no}</td>\r\n            </tr>\r\n            \r\n           \r\n           \r\n\r\n            {/* <tr>\r\n                <td>Date of birth:</td>\r\n                <td>\r\n                  <input \r\n                        value={user.dob}\r\n                        type=\"date\"\r\n                        id=\"dob\"\r\n                        onChange={handleChange}/>\r\n                </td>\r\n                <td></td>\r\n            </tr> */}\r\n\r\n\r\n           \r\n\r\n           \r\n            <tr>\r\n                <td>Highest Qualification</td>\r\n                <td>\r\n                  <input \r\n                        value={user.qualification_details}\r\n                        type=\"text\"\r\n                        id=\"qualification_details\"\r\n                        onChange={handleChange}/>\r\n                </td>\r\n                <td></td>\r\n            </tr>\r\n           \r\n            <tr>\r\n              <td style={{ colspan: 2 }}>         \r\n                  <br></br>\r\n                  <button onClick={sendData}>\r\n                    Update\r\n                  </button>\r\n                 \r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </center>\r\n    </>);\r\n}\r\nexport default Edit;","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\resetpwd\\EnterEmail.js",["212","213","214","215"],[],"import { useState } from \"react\";\r\n\r\nimport { useNavigate,useLocation } from \"react-router-dom\";\r\n\r\nimport {resetPasswordNavigator} from  \"../../helpers/ResetPasswordHelper\";\r\nimport '../resetpwd/EnterOtp'\r\nfunction EnterEmail() {\r\n\r\n    const[email,setEmail] = useState(\"\");\r\n    const[error,setError] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const location = useLocation();\r\n\r\n    \r\n    const sendMail = ()=>{\r\n        var helper = new XMLHttpRequest();\r\n        helper.onreadystatechange = ()=>{\r\n         // console.log(user);\r\n            if(helper.readyState == 4 && helper.status == 200)\r\n            {\r\n            navigate(\"/rpwd/otp\")         \r\n            }\r\n            \r\n        };\r\n        helper.open(\"POST\",\"http://localhost:8080/users/resetPassword\");\r\n        helper.setRequestHeader(\"Content-Type\", \"application/json\")\r\n       // debugger;\r\n        const cred = { email: email} \r\n        helper.send(JSON.stringify(cred))\r\n    }\r\n\r\n    const submitData = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(email == \"\"){\r\n            setError(\"Please enetr the email first!!!\")\r\n        }else{\r\n            resetPasswordNavigator(email,navigate,setError)\r\n        }\r\n\r\n             \r\n    }\r\n        \r\n\r\n    return (<>\r\n    <center style={{alignItems:\"center\",verticalAlign:\"center\"}}>\r\n        <form onSubmit={submitData} className=\"col-md-4 col-sm-4\" style={{border:'solid 2px black',marginTop:\"10%\"}}>\r\n        <div class=\"mb-3\" style={{margin:'10px'}}>\r\n            <label for=\"otp\" className=\"form-label\">Please Enter Registered Email Id</label>\r\n            <input type=\"text\" className=\"form-control\" id=\"otp\" value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n            <h6 style={{color:\"red\"}}>{error}</h6>\r\n            <button type=\"submit\" className=\"btn btn-primary\" style={{marginTop:\"10px\"}} onClick={sendMail}>Submit</button>\r\n        </div>\r\n        </form>\r\n    </center>\r\n    </>);\r\n}\r\n\r\nexport default EnterEmail;","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\resetpwd\\EnterOtp.js",["216"],[],"import { useState } from \"react\";\r\n\r\nimport { useNavigate,useLocation } from \"react-router-dom\";\r\n\r\nimport { checkIfValidOtp } from \"../../helpers/ResetPasswordHelper\"\r\n\r\nfunction EnterOtp(params) {\r\n\r\n    const[otp,setOtp] = useState(\"\");\r\n    const[error,setError] = useState(\"\");\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const location = useLocation();\r\n\r\n    const submitData = (event) => {\r\n        event.preventDefault();\r\n        checkIfValidOtp({user_id:location.state.userid,otp:otp},setOtp,navigate)        \r\n    }\r\n              \r\n\r\n    return (<>\r\n    <center style={{alignItems:\"center\",verticalAlign:\"center\"}}>\r\n        <form onSubmit={submitData} className=\"col-md-4 col-sm-4\" style={{border:'solid 2px black',marginTop:\"10%\"}}>\r\n        <div class=\"mb-3\" style={{margin:'10px'}}>\r\n            <label for=\"otp\" className=\"form-label\">Enter OTP</label>\r\n            <input type=\"text\" className=\"form-control\" maxLength={6} minLength={6} id=\"otp\" value={otp} onChange={(e) => setOtp(e.target.value)}/>\r\n            <h6 style={{color:\"red\"}}>{error}</h6>\r\n            <button type=\"submit\" className=\"btn btn-primary\" style={{marginTop:\"10px\"}}>Submit</button>\r\n        </div>\r\n        </form>\r\n    </center>\r\n    </>);\r\n}\r\n\r\nexport default EnterOtp;","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\resetpwd\\EnterPwd.js",["217","218","219","220"],[],"import { useEffect,useState } from \"react\";\r\nimport { useLocation,useNavigate } from \"react-router-dom\";\r\nimport { ChangePassword } from \"../../helpers/ResetPasswordHelper\"\r\n\r\nfunction EnterNewPassword(params) {\r\n    const[newPassword,setNewPassword] = useState(\"\");\r\n    const[confirmNewPassword,setConfirmNewPassword] = useState(\"\");\r\n    const[cachedList,setCachedList] = useState([]);\r\n    const[error,setError] = useState(\"\");\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    \r\n\r\n    useEffect(async ()=>{\r\n        var obj;\r\n        async function Fetchdata() {\r\n            //caching last 3 passwords\r\n        await fetch(`http://localhost:8080/rpwd/${location.state.userid}`, {\r\n            method: 'GET', // or 'PUT'\r\n            })\r\n              .then((response) => response.json())\r\n              .then((data) => {\r\n                //getting list of orevios 3 passwords\r\n                console.log('Success:', data);\r\n                obj = JSON.parse(data.data)\r\n                //setting up cached List\r\n                setCachedList(obj);\r\n                console.log(obj)\r\n              })\r\n              .catch((error) => {\r\n                //otp is not valid send false\r\n                console.error('Error:', error);\r\n          });\r\n        }\r\n        Fetchdata()\r\n        console.log(\"final obj:\" + obj)\r\n\r\n    },[])\r\n\r\n    const submitData = (event) => {\r\n        event.preventDefault();\r\n        var isPrevious = false;\r\n\r\n        if(newPassword != confirmNewPassword){\r\n            // show error np and cnp not matching\r\n            setError(\"Confirm password not matching!!!\")\r\n        }else{\r\n            cachedList.forEach((a)=>{\r\n                // cachedList of passwords\r\n                console.log(a.pwd)\r\n                if(a.pwd == newPassword){\r\n                    isPrevious = true;\r\n                }\r\n            })\r\n\r\n            if(isPrevious){\r\n                    // show error previously used password\r\n                    setError(\"Enter password which is not in list of previously used 3 passwords\")\r\n            }else{\r\n                setError(\"\")\r\n                ChangePassword(location.state.userid,newPassword,navigate,setError)\r\n            }          \r\n\r\n        }   \r\n    }\r\n\r\n    return (<>\r\n    <center style={{alignItems:\"center\",verticalAlign:\"center\"}}>\r\n        <form onSubmit={submitData} className=\"col-md-4 col-sm-4\" style={{border:'solid 2px black',marginTop:\"10%\"}}>\r\n        <div class=\"mb-3\" style={{margin:'10px'}}>\r\n            <label for=\"nPwd\" className=\"form-label\">Enter New Password</label>\r\n            <input type=\"password\" className=\"form-control\"  id=\"nPwd\" value={newPassword} onChange={(e) => setNewPassword(e.target.value)}/>\r\n            <label for=\"cnPwd\" className=\"form-label\">Confirm New Password</label>\r\n            <input type=\"password\" className=\"form-control\"  id=\"cnPwd\" value={confirmNewPassword} onChange={(e) => setConfirmNewPassword(e.target.value)}/>\r\n            <h3 style={{color:\"red\"}}>{error}</h3>\r\n            <button type=\"submit\" className=\"btn btn-primary\" style={{marginTop:\"10px\"}}>Change Password</button>\r\n        </div>\r\n        </form>\r\n    </center>\r\n    </>);\r\n\r\n}\r\n\r\nexport default EnterNewPassword;","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\Headercandi.js",[],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Home\\Header.js",[],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Home\\Footer.js",[],[],"C:\\Users\\Upgrade\\react---\\exam7\\src\\helpers\\ResetPasswordHelper.js",["221","222","223"],[],"const  resetPasswordNavigator = async(email,navigate,setError) =>{\r\n    debugger;\r\n    // User id and email toTo be passed dynamatically\r\n    var userObj = {\r\n        \"email\":email\r\n    }\r\n\r\nawait fetch('http://localhost:9999/otp/gtOtp', {\r\n    \r\n    method: 'POST', // or 'PUT'\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n     body: JSON.stringify(userObj),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        debugger;\r\n        //otp is valid send true\r\n        console.log('Success:', data);\r\n        console.log('Success:', data.result);\r\n        if(data.result == \"ok\"){\r\n            console.log(\"Response from server = > \" + data.data.userid)\r\n            navigate(\"/rpwd/otp\",{ state: { userid: data.data.userid,email:data.data.email } });\r\n        }else{\r\n            console.log(\"Something went wrong!!!\")\r\n            setError(\"Please enter a valid email!!!\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        debugger;\r\n        console.error('Error:', error);\r\n  });\r\n\r\n    \r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------\r\n//check if otp entered by user is right or wrong\r\nasync function checkIfValidOtp(user,setOtp,navigate,setError) {\r\n    //1. send the data userid,otp\r\n    await fetch('http://localhost:9999/otp/', {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n         body: JSON.stringify(user),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //otp is valid send true\r\n            console.log('Success:', data);\r\n            console.log('Success:', data.result);\r\n            if(data.result == \"ok\"){\r\n                 navigate(\"/rpwd/reset\",{ state: { userid: user.user_id } });\r\n            }else{\r\n                setOtp(\"\");\r\n                setError(\"Please enter a valid Otp!!!\")\r\n            }\r\n            return true;   \r\n          })\r\n          .catch((error) => {\r\n            //otp is not valid send false\r\n            console.error('Error:', error);\r\n            return false;\r\n      });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------\r\n// Function for updating changed password\r\n\r\nasync function ChangePassword(uid,np,navigate,setError) {\r\n    //data to be passed\r\n    var tempObj = {\r\n            \"userid\":uid,\r\n            \"pwd\":np\r\n    }\r\n\r\n     await fetch('http://localhost:9090/rpwd/', {\r\n     method: 'POST', // or 'PUT'\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n     body: JSON.stringify(tempObj),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            //getting result if password is changed\r\n            console.log('Success:', data);\r\n            if(data.result == \"ok\"){\r\n                //navigate to home page\r\n                navigate(\"/\");\r\n            }else{\r\n                //something went wrong\r\n                setError(\"Something went wrong please try again!!!\")\r\n            }\r\n            \r\n          })\r\n          .catch((error) => {\r\n            //otp is not valid send false\r\n            console.error('Error:', error);\r\n      });\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------------------\r\nexport { resetPasswordNavigator,checkIfValidOtp,ChangePassword}","C:\\Users\\Upgrade\\react---\\exam7\\src\\components\\Candidate\\ExamCounter.js",[],[],{"ruleId":"224","severity":1,"message":"225","line":43,"column":55,"nodeType":"226","messageId":"227","endLine":43,"endColumn":72},{"ruleId":"224","severity":1,"message":"228","line":44,"column":53,"nodeType":"226","messageId":"227","endLine":44,"endColumn":68},{"ruleId":"224","severity":1,"message":"229","line":46,"column":45,"nodeType":"226","messageId":"227","endLine":46,"endColumn":60},{"ruleId":"224","severity":1,"message":"230","line":47,"column":50,"nodeType":"226","messageId":"227","endLine":47,"endColumn":67},{"ruleId":"231","severity":1,"message":"232","line":58,"column":9,"nodeType":"233","messageId":"234","endLine":58,"endColumn":17},{"ruleId":"231","severity":1,"message":"235","line":73,"column":11,"nodeType":"233","messageId":"234","endLine":73,"endColumn":29},{"ruleId":"231","severity":1,"message":"236","line":126,"column":11,"nodeType":"233","messageId":"234","endLine":126,"endColumn":23},{"ruleId":"237","severity":1,"message":"238","line":163,"column":25,"nodeType":"239","messageId":"240","endLine":163,"endColumn":27},{"ruleId":"237","severity":1,"message":"238","line":163,"column":45,"nodeType":"239","messageId":"240","endLine":163,"endColumn":47},{"ruleId":"231","severity":1,"message":"241","line":26,"column":19,"nodeType":"233","messageId":"234","endLine":26,"endColumn":29,"suppressions":"242"},{"ruleId":"237","severity":1,"message":"243","line":24,"column":19,"nodeType":"239","messageId":"240","endLine":24,"endColumn":21},{"ruleId":"237","severity":1,"message":"238","line":38,"column":34,"nodeType":"239","messageId":"240","endLine":38,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":38,"column":56,"nodeType":"239","messageId":"240","endLine":38,"endColumn":58},{"ruleId":"237","severity":1,"message":"238","line":61,"column":51,"nodeType":"239","messageId":"240","endLine":61,"endColumn":53},{"ruleId":"237","severity":1,"message":"238","line":64,"column":56,"nodeType":"239","messageId":"240","endLine":64,"endColumn":58},{"ruleId":"237","severity":1,"message":"238","line":69,"column":43,"nodeType":"239","messageId":"240","endLine":69,"endColumn":45},{"ruleId":"237","severity":1,"message":"238","line":69,"column":65,"nodeType":"239","messageId":"240","endLine":69,"endColumn":67},{"ruleId":"237","severity":1,"message":"238","line":30,"column":34,"nodeType":"239","messageId":"240","endLine":30,"endColumn":36},{"ruleId":"231","severity":1,"message":"244","line":8,"column":8,"nodeType":"233","messageId":"234","endLine":8,"endColumn":14},{"ruleId":"231","severity":1,"message":"245","line":19,"column":6,"nodeType":"233","messageId":"234","endLine":19,"endColumn":8},{"ruleId":"231","severity":1,"message":"246","line":2,"column":9,"nodeType":"233","messageId":"234","endLine":2,"endColumn":20},{"ruleId":"237","severity":1,"message":"238","line":41,"column":27,"nodeType":"239","messageId":"240","endLine":41,"endColumn":29},{"ruleId":"237","severity":1,"message":"238","line":41,"column":47,"nodeType":"239","messageId":"240","endLine":41,"endColumn":49},{"ruleId":"237","severity":1,"message":"238","line":47,"column":25,"nodeType":"239","messageId":"240","endLine":47,"endColumn":27},{"ruleId":"231","severity":1,"message":"247","line":2,"column":9,"nodeType":"233","messageId":"234","endLine":2,"endColumn":13},{"ruleId":"231","severity":1,"message":"248","line":22,"column":10,"nodeType":"233","messageId":"234","endLine":22,"endColumn":11},{"ruleId":"237","severity":1,"message":"238","line":35,"column":25,"nodeType":"239","messageId":"240","endLine":35,"endColumn":27},{"ruleId":"237","severity":1,"message":"238","line":35,"column":45,"nodeType":"239","messageId":"240","endLine":35,"endColumn":47},{"ruleId":"237","severity":1,"message":"238","line":41,"column":23,"nodeType":"239","messageId":"240","endLine":41,"endColumn":25},{"ruleId":"231","severity":1,"message":"249","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":13},{"ruleId":"231","severity":1,"message":"250","line":10,"column":12,"nodeType":"233","messageId":"234","endLine":10,"endColumn":19},{"ruleId":"231","severity":1,"message":"241","line":10,"column":21,"nodeType":"233","messageId":"234","endLine":10,"endColumn":31},{"ruleId":"237","severity":1,"message":"238","line":49,"column":34,"nodeType":"239","messageId":"240","endLine":49,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":120,"column":35,"nodeType":"239","messageId":"240","endLine":120,"endColumn":37},{"ruleId":"231","severity":1,"message":"232","line":158,"column":17,"nodeType":"233","messageId":"234","endLine":158,"endColumn":25},{"ruleId":"231","severity":1,"message":"235","line":175,"column":20,"nodeType":"233","messageId":"234","endLine":175,"endColumn":38},{"ruleId":"231","severity":1,"message":"236","line":230,"column":20,"nodeType":"233","messageId":"234","endLine":230,"endColumn":32},{"ruleId":"231","severity":1,"message":"247","line":2,"column":10,"nodeType":"233","messageId":"234","endLine":2,"endColumn":14},{"ruleId":"231","severity":1,"message":"251","line":51,"column":12,"nodeType":"233","messageId":"234","endLine":51,"endColumn":21},{"ruleId":"231","severity":1,"message":"252","line":51,"column":23,"nodeType":"233","messageId":"234","endLine":51,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":69,"column":36,"nodeType":"239","messageId":"240","endLine":69,"endColumn":38},{"ruleId":"237","severity":1,"message":"238","line":69,"column":58,"nodeType":"239","messageId":"240","endLine":69,"endColumn":60},{"ruleId":"253","severity":1,"message":"254","line":72,"column":29,"nodeType":"255","endLine":72,"endColumn":60},{"ruleId":"237","severity":1,"message":"238","line":30,"column":34,"nodeType":"239","messageId":"240","endLine":30,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":30,"column":56,"nodeType":"239","messageId":"240","endLine":30,"endColumn":58},{"ruleId":"253","severity":1,"message":"254","line":33,"column":27,"nodeType":"255","endLine":33,"endColumn":58},{"ruleId":"237","severity":1,"message":"238","line":83,"column":31,"nodeType":"239","messageId":"240","endLine":83,"endColumn":33},{"ruleId":"237","severity":1,"message":"238","line":83,"column":51,"nodeType":"239","messageId":"240","endLine":83,"endColumn":53},{"ruleId":"237","severity":1,"message":"238","line":89,"column":29,"nodeType":"239","messageId":"240","endLine":89,"endColumn":31},{"ruleId":"231","severity":1,"message":"256","line":9,"column":12,"nodeType":"233","messageId":"234","endLine":9,"endColumn":18},{"ruleId":"231","severity":1,"message":"257","line":9,"column":19,"nodeType":"233","messageId":"234","endLine":9,"endColumn":28},{"ruleId":"231","severity":1,"message":"258","line":16,"column":11,"nodeType":"233","messageId":"234","endLine":16,"endColumn":20},{"ruleId":"231","severity":1,"message":"259","line":18,"column":18,"nodeType":"233","messageId":"234","endLine":18,"endColumn":26},{"ruleId":"260","severity":1,"message":"261","line":58,"column":19,"nodeType":"262","messageId":"263","endLine":58,"endColumn":27},{"ruleId":"237","severity":1,"message":"238","line":59,"column":22,"nodeType":"239","messageId":"240","endLine":59,"endColumn":24},{"ruleId":"237","severity":1,"message":"238","line":78,"column":36,"nodeType":"239","messageId":"240","endLine":78,"endColumn":38},{"ruleId":"237","severity":1,"message":"238","line":78,"column":58,"nodeType":"239","messageId":"240","endLine":78,"endColumn":60},{"ruleId":"237","severity":1,"message":"238","line":102,"column":46,"nodeType":"239","messageId":"240","endLine":102,"endColumn":48},{"ruleId":"237","severity":1,"message":"238","line":103,"column":57,"nodeType":"239","messageId":"240","endLine":103,"endColumn":59},{"ruleId":"237","severity":1,"message":"238","line":121,"column":36,"nodeType":"239","messageId":"240","endLine":121,"endColumn":38},{"ruleId":"237","severity":1,"message":"238","line":121,"column":55,"nodeType":"239","messageId":"240","endLine":121,"endColumn":57},{"ruleId":"231","severity":1,"message":"264","line":7,"column":19,"nodeType":"233","messageId":"234","endLine":7,"endColumn":27},{"ruleId":"237","severity":1,"message":"238","line":47,"column":33,"nodeType":"239","messageId":"240","endLine":47,"endColumn":35},{"ruleId":"237","severity":1,"message":"238","line":47,"column":56,"nodeType":"239","messageId":"240","endLine":47,"endColumn":58},{"ruleId":"237","severity":1,"message":"238","line":74,"column":34,"nodeType":"239","messageId":"240","endLine":74,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":74,"column":56,"nodeType":"239","messageId":"240","endLine":74,"endColumn":58},{"ruleId":"231","severity":1,"message":"249","line":3,"column":8,"nodeType":"233","messageId":"234","endLine":3,"endColumn":13},{"ruleId":"231","severity":1,"message":"241","line":10,"column":21,"nodeType":"233","messageId":"234","endLine":10,"endColumn":31},{"ruleId":"237","severity":1,"message":"238","line":49,"column":34,"nodeType":"239","messageId":"240","endLine":49,"endColumn":36},{"ruleId":"231","severity":1,"message":"265","line":72,"column":13,"nodeType":"233","messageId":"234","endLine":72,"endColumn":17},{"ruleId":"237","severity":1,"message":"238","line":120,"column":35,"nodeType":"239","messageId":"240","endLine":120,"endColumn":37},{"ruleId":"231","severity":1,"message":"232","line":158,"column":17,"nodeType":"233","messageId":"234","endLine":158,"endColumn":25},{"ruleId":"231","severity":1,"message":"235","line":175,"column":20,"nodeType":"233","messageId":"234","endLine":175,"endColumn":38},{"ruleId":"231","severity":1,"message":"236","line":230,"column":20,"nodeType":"233","messageId":"234","endLine":230,"endColumn":32},{"ruleId":"231","severity":1,"message":"266","line":14,"column":11,"nodeType":"233","messageId":"234","endLine":14,"endColumn":19},{"ruleId":"237","severity":1,"message":"238","line":21,"column":34,"nodeType":"239","messageId":"240","endLine":21,"endColumn":36},{"ruleId":"237","severity":1,"message":"238","line":21,"column":56,"nodeType":"239","messageId":"240","endLine":21,"endColumn":58},{"ruleId":"237","severity":1,"message":"238","line":37,"column":18,"nodeType":"239","messageId":"240","endLine":37,"endColumn":20},{"ruleId":"231","severity":1,"message":"267","line":10,"column":17,"nodeType":"233","messageId":"234","endLine":10,"endColumn":25},{"ruleId":"253","severity":1,"message":"268","line":14,"column":15,"nodeType":"269","endLine":38,"endColumn":6},{"ruleId":"253","severity":1,"message":"270","line":38,"column":7,"nodeType":"271","endLine":38,"endColumn":9,"suggestions":"272"},{"ruleId":"237","severity":1,"message":"243","line":44,"column":24,"nodeType":"239","messageId":"240","endLine":44,"endColumn":26},{"ruleId":"237","severity":1,"message":"238","line":51,"column":26,"nodeType":"239","messageId":"240","endLine":51,"endColumn":28},{"ruleId":"237","severity":1,"message":"238","line":22,"column":24,"nodeType":"239","messageId":"240","endLine":22,"endColumn":26},{"ruleId":"237","severity":1,"message":"238","line":55,"column":28,"nodeType":"239","messageId":"240","endLine":55,"endColumn":30},{"ruleId":"237","severity":1,"message":"238","line":95,"column":28,"nodeType":"239","messageId":"240","endLine":95,"endColumn":30},"react/jsx-pascal-case","Imported JSX component Candidate_list must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Conduct_exam must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Company_edit must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component Questions_list must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'register' is assigned a value but never used.","Identifier","unusedVar","'user_type_id_regex' is assigned a value but never used.","'dataToBeSent' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setMessage' is assigned a value but never used.",["273"],"Expected '!==' and instead saw '!='.","'Footer' is defined but never used.","'se' is assigned a value but never used.","'useLocation' is defined but never used.","'Link' is defined but never used.","'a' is assigned a value but never used.","'axios' is defined but never used.","'message' is assigned a value but never used.","'updatques' is assigned a value but never used.","'setupdatques' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'result' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'select' is assigned a value but never used.","'setSelect' is assigned a value but never used.","'questions' is assigned a value but never used.","'setMarks' is assigned a value but never used.","array-callback-return","Array.prototype.some() expects a value to be returned at the end of function.","FunctionExpression","expectedAtEnd","'setApply' is assigned a value but never used.","'url1' is assigned a value but never used.","'location' is assigned a value but never used.","'setError' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'location.state.userid'. Either include it or remove the dependency array.","ArrayExpression",["274"],{"kind":"275","justification":"276"},{"desc":"277","fix":"278"},"directive","","Update the dependencies array to be: [location.state.userid]",{"range":"279","text":"280"},[1363,1365],"[location.state.userid]"]