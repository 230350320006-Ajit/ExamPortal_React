{"ast":null,"code":"const resetPasswordNavigator = async (email, navigate, setError) => {\n  debugger;\n  // User id and email toTo be passed dynamatically\n  var userObj = {\n    \"email\": email\n  };\n  await fetch('http://localhost:9999/otp/gtOtp', {\n    method: 'POST',\n    // or 'PUT'\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(userObj)\n  }).then(response => response.json()).then(data => {\n    debugger;\n    //otp is valid send true\n    console.log('Success:', data);\n    console.log('Success:', data.result);\n    if (data.result == \"ok\") {\n      console.log(\"Response from server = > \" + data.data.userid);\n      navigate(\"/rpwd/otp\", {\n        state: {\n          userid: data.data.userid,\n          email: data.data.email\n        }\n      });\n    } else {\n      console.log(\"Something went wrong!!!\");\n      setError(\"Please enter a valid email!!!\");\n    }\n  }).catch(error => {\n    debugger;\n    console.error('Error:', error);\n  });\n};\n\n//-----------------------------------------------------------------------------------------------------\n//check if otp entered by user is right or wrong\nasync function checkIfValidOtp(user, setOtp, navigate, setError) {\n  //1. send the data userid,otp\n  await fetch('http://localhost:9999/otp/', {\n    method: 'POST',\n    // or 'PUT'\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => response.json()).then(data => {\n    //otp is valid send true\n    console.log('Success:', data);\n    console.log('Success:', data.result);\n    if (data.result == \"ok\") {\n      navigate(\"/rpwd/reset\", {\n        state: {\n          userid: user.user_id\n        }\n      });\n    } else {\n      setOtp(\"\");\n      setError(\"Please enter a valid Otp!!!\");\n    }\n    return true;\n  }).catch(error => {\n    //otp is not valid send false\n    console.error('Error:', error);\n    return false;\n  });\n}\n\n//-----------------------------------------------------------------------------------------\n// Function for updating changed password\n\nasync function ChangePassword(uid, np, navigate, setError) {\n  //data to be passed\n  var tempObj = {\n    \"userid\": uid,\n    \"pwd\": np\n  };\n  await fetch('http://localhost:9090/rpwd/', {\n    method: 'POST',\n    // or 'PUT'\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(tempObj)\n  }).then(response => response.json()).then(data => {\n    //getting result if password is changed\n    console.log('Success:', data);\n    if (data.result == \"ok\") {\n      //navigate to home page\n      navigate(\"/\");\n    } else {\n      //something went wrong\n      setError(\"Something went wrong please try again!!!\");\n    }\n  }).catch(error => {\n    //otp is not valid send false\n    console.error('Error:', error);\n  });\n}\n\n//-----------------------------------------------------------------------------------------\n_c = ChangePassword;\nexport { resetPasswordNavigator, checkIfValidOtp, ChangePassword };\nvar _c;\n$RefreshReg$(_c, \"ChangePassword\");","map":{"version":3,"names":["resetPasswordNavigator","email","navigate","setError","userObj","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","result","userid","state","catch","error","checkIfValidOtp","user","setOtp","user_id","ChangePassword","uid","np","tempObj","_c","$RefreshReg$"],"sources":["C:/Users/Upgrade/react---/exam7/src/helpers/ResetPasswordHelper.js"],"sourcesContent":["const  resetPasswordNavigator = async(email,navigate,setError) =>{\r\n    debugger;\r\n    // User id and email toTo be passed dynamatically\r\n    var userObj = {\r\n        \"email\":email\r\n    }\r\n\r\nawait fetch('http://localhost:9999/otp/gtOtp', {\r\n    \r\n    method: 'POST', // or 'PUT'\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n     body: JSON.stringify(userObj),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        debugger;\r\n        //otp is valid send true\r\n        console.log('Success:', data);\r\n        console.log('Success:', data.result);\r\n        if(data.result == \"ok\"){\r\n            console.log(\"Response from server = > \" + data.data.userid)\r\n            navigate(\"/rpwd/otp\",{ state: { userid: data.data.userid,email:data.data.email } });\r\n        }else{\r\n            console.log(\"Something went wrong!!!\")\r\n            setError(\"Please enter a valid email!!!\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        debugger;\r\n        console.error('Error:', error);\r\n  });\r\n\r\n    \r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------\r\n//check if otp entered by user is right or wrong\r\nasync function checkIfValidOtp(user,setOtp,navigate,setError) {\r\n    //1. send the data userid,otp\r\n    await fetch('http://localhost:9999/otp/', {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n         body: JSON.stringify(user),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //otp is valid send true\r\n            console.log('Success:', data);\r\n            console.log('Success:', data.result);\r\n            if(data.result == \"ok\"){\r\n                 navigate(\"/rpwd/reset\",{ state: { userid: user.user_id } });\r\n            }else{\r\n                setOtp(\"\");\r\n                setError(\"Please enter a valid Otp!!!\")\r\n            }\r\n            return true;   \r\n          })\r\n          .catch((error) => {\r\n            //otp is not valid send false\r\n            console.error('Error:', error);\r\n            return false;\r\n      });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------\r\n// Function for updating changed password\r\n\r\nasync function ChangePassword(uid,np,navigate,setError) {\r\n    //data to be passed\r\n    var tempObj = {\r\n            \"userid\":uid,\r\n            \"pwd\":np\r\n    }\r\n\r\n     await fetch('http://localhost:9090/rpwd/', {\r\n     method: 'POST', // or 'PUT'\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n     body: JSON.stringify(tempObj),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            //getting result if password is changed\r\n            console.log('Success:', data);\r\n            if(data.result == \"ok\"){\r\n                //navigate to home page\r\n                navigate(\"/\");\r\n            }else{\r\n                //something went wrong\r\n                setError(\"Something went wrong please try again!!!\")\r\n            }\r\n            \r\n          })\r\n          .catch((error) => {\r\n            //otp is not valid send false\r\n            console.error('Error:', error);\r\n      });\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------------------\r\nexport { resetPasswordNavigator,checkIfValidOtp,ChangePassword}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}