{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Upgrade/react---/exam7/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/Upgrade/react---/exam7/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";var resetPasswordNavigator=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(email,navigate,setError){var userObj;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:debugger;// User id and email toTo be passed dynamatically\nuserObj={\"email\":email};_context.next=4;return fetch('http://localhost:9999/otp/gtOtp',{method:'POST',// or 'PUT'\nheaders:{'Content-Type':'application/json'},body:JSON.stringify(userObj)}).then(function(response){return response.json();}).then(function(data){debugger;//otp is valid send true\nconsole.log('Success:',data);console.log('Success:',data.result);if(data.result==\"ok\"){console.log(\"Response from server = > \"+data.data.userid);navigate(\"/rpwd/otp\",{state:{userid:data.data.userid,email:data.data.email}});}else{console.log(\"Something went wrong!!!\");setError(\"Please enter a valid email!!!\");}}).catch(function(error){debugger;console.error('Error:',error);});case 4:case\"end\":return _context.stop();}},_callee);}));return function resetPasswordNavigator(_x,_x2,_x3){return _ref.apply(this,arguments);};}();//-----------------------------------------------------------------------------------------------------\n//check if otp entered by user is right or wrong\nfunction checkIfValidOtp(_x4,_x5,_x6,_x7){return _checkIfValidOtp.apply(this,arguments);}//-----------------------------------------------------------------------------------------\n// Function for updating changed password\nfunction _checkIfValidOtp(){_checkIfValidOtp=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(user,setOtp,navigate,setError){return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('http://localhost:9999/otp/',{method:'POST',// or 'PUT'\nheaders:{'Content-Type':'application/json'},body:JSON.stringify(user)}).then(function(response){return response.json();}).then(function(data){//otp is valid send true\nconsole.log('Success:',data);console.log('Success:',data.result);if(data.result==\"ok\"){navigate(\"/rpwd/reset\",{state:{userid:user.user_id}});}else{setOtp(\"\");setError(\"Please enter a valid Otp!!!\");}return true;}).catch(function(error){//otp is not valid send false\nconsole.error('Error:',error);return false;});case 2:case\"end\":return _context2.stop();}},_callee2);}));return _checkIfValidOtp.apply(this,arguments);}function ChangePassword(_x8,_x9,_x10,_x11){return _ChangePassword.apply(this,arguments);}//-----------------------------------------------------------------------------------------\nfunction _ChangePassword(){_ChangePassword=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(uid,np,navigate,setError){var tempObj;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0://data to be passed\ntempObj={\"userid\":uid,\"pwd\":np};_context3.next=3;return fetch('http://localhost:9090/rpwd/',{method:'POST',// or 'PUT'\nheaders:{'Content-Type':'application/json'},body:JSON.stringify(tempObj)}).then(function(response){return response.json();}).then(function(data){//getting result if password is changed\nconsole.log('Success:',data);if(data.result==\"ok\"){//navigate to home page\nnavigate(\"/\");}else{//something went wrong\nsetError(\"Something went wrong please try again!!!\");}}).catch(function(error){//otp is not valid send false\nconsole.error('Error:',error);});case 3:case\"end\":return _context3.stop();}},_callee3);}));return _ChangePassword.apply(this,arguments);}export{resetPasswordNavigator,checkIfValidOtp,ChangePassword};","map":{"version":3,"names":["resetPasswordNavigator","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","email","navigate","setError","userObj","wrap","_callee$","_context","prev","next","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","result","userid","state","catch","error","stop","_x","_x2","_x3","apply","arguments","checkIfValidOtp","_x4","_x5","_x6","_x7","_checkIfValidOtp","_callee2","user","setOtp","_callee2$","_context2","user_id","ChangePassword","_x8","_x9","_x10","_x11","_ChangePassword","_callee3","uid","np","tempObj","_callee3$","_context3"],"sources":["C:/Users/Upgrade/react---/exam7/src/helpers/ResetPasswordHelper.js"],"sourcesContent":["const  resetPasswordNavigator = async(email,navigate,setError) =>{\r\n    debugger;\r\n    // User id and email toTo be passed dynamatically\r\n    var userObj = {\r\n        \"email\":email\r\n    }\r\n\r\nawait fetch('http://localhost:9999/otp/gtOtp', {\r\n    \r\n    method: 'POST', // or 'PUT'\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n     body: JSON.stringify(userObj),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        debugger;\r\n        //otp is valid send true\r\n        console.log('Success:', data);\r\n        console.log('Success:', data.result);\r\n        if(data.result == \"ok\"){\r\n            console.log(\"Response from server = > \" + data.data.userid)\r\n            navigate(\"/rpwd/otp\",{ state: { userid: data.data.userid,email:data.data.email } });\r\n        }else{\r\n            console.log(\"Something went wrong!!!\")\r\n            setError(\"Please enter a valid email!!!\")\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        debugger;\r\n        console.error('Error:', error);\r\n  });\r\n\r\n    \r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------------------------------\r\n//check if otp entered by user is right or wrong\r\nasync function checkIfValidOtp(user,setOtp,navigate,setError) {\r\n    //1. send the data userid,otp\r\n    await fetch('http://localhost:9999/otp/', {\r\n        method: 'POST', // or 'PUT'\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n        },\r\n         body: JSON.stringify(user),\r\n        })\r\n          .then((response) => response.json())\r\n          .then((data) => {\r\n            //otp is valid send true\r\n            console.log('Success:', data);\r\n            console.log('Success:', data.result);\r\n            if(data.result == \"ok\"){\r\n                 navigate(\"/rpwd/reset\",{ state: { userid: user.user_id } });\r\n            }else{\r\n                setOtp(\"\");\r\n                setError(\"Please enter a valid Otp!!!\")\r\n            }\r\n            return true;   \r\n          })\r\n          .catch((error) => {\r\n            //otp is not valid send false\r\n            console.error('Error:', error);\r\n            return false;\r\n      });\r\n\r\n}\r\n\r\n\r\n\r\n\r\n//-----------------------------------------------------------------------------------------\r\n// Function for updating changed password\r\n\r\nasync function ChangePassword(uid,np,navigate,setError) {\r\n    //data to be passed\r\n    var tempObj = {\r\n            \"userid\":uid,\r\n            \"pwd\":np\r\n    }\r\n\r\n     await fetch('http://localhost:9090/rpwd/', {\r\n     method: 'POST', // or 'PUT'\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n    },\r\n     body: JSON.stringify(tempObj),\r\n    })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n            //getting result if password is changed\r\n            console.log('Success:', data);\r\n            if(data.result == \"ok\"){\r\n                //navigate to home page\r\n                navigate(\"/\");\r\n            }else{\r\n                //something went wrong\r\n                setError(\"Something went wrong please try again!!!\")\r\n            }\r\n            \r\n          })\r\n          .catch((error) => {\r\n            //otp is not valid send false\r\n            console.error('Error:', error);\r\n      });\r\n}\r\n\r\n\r\n//-----------------------------------------------------------------------------------------\r\nexport { resetPasswordNavigator,checkIfValidOtp,ChangePassword}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}